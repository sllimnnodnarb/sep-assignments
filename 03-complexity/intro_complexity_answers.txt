1. Describe an analogy for relating an algorithm that has efficiency O(1) and another algorithm that has O(2n). An example would be:
  An algorithm that has O(1) is a Cheetah and an algorithm that has O(2n) is a Snail.

2. In plain English, what is the best case scenario for binary search?
  That you find the the item on the first hit.

3. In plain English, what is the worst-case scenario for binary search?
  The item is not in the array.

4. In plain English, what is the bounded-case scenario for binary search?
  Ω(1) = O(logn)

5. Create a graph using the data below. Here's a CSV with the values you'll need.
 image to graph is title "graphing exponential time.png" and is attached in the initial commit.

6. What's the asymptotic limit as n approaches infinity for the function defined by the values above?
  infinite

7. What is the Big-O of an algorithm that has the data points above?
  O(2^n)

8. Write a Ruby script that calculates and prints the N number, given an iteration, for linear search in the worst case (similar to the graph above).

  def linear_worst_case(arr)
    N = arr.length
    puts N
  end

9. Create a graph from the output using Google Sheets or other graphing software. Analyze the graph and denote its Big-O somewhere on the graph.

  https://docs.google.com/spreadsheets/d/13tf4SMDL7cUSXmRRFpaWv2U7zdMW5UEYg25W1IPluRQ/edit?usp=sharing

10. What is the Big-O of binary search?
  BigO = O(logn)

11. What is the Big-Ω of binary search?
  BigΩ = O(1)

12. What is the Big-Ө of binary search?
  BigΘ = O(logn)
